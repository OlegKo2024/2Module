print('This is a webinar on 30.06.2024')

# year = int(input('Enter year: '))
# if year % 4 == 0 and year % 100 != 0 or year % 400 == 0:
#     print('V')
# else:
#     print('N')

# year = int(input('Enter year: '))
# if year % 4 == 0 and not year % 100 = 0 or year % 400 == 0:
#     print('V')
# else:
#     print('N')

print('КОЛИЧЕСТВО ЦИФР В ЧИСЛЕ - WHILE')
# number = int(input('Enter a number: '))
# l = 0
# while number > 0:
#     l += 1
#     number = number // 10
# print(l)
# идет замена введенного числа новым целым числом, которое получает делением на 10, то есть мы откусываем постепенно
# крайне правое число и когда мы приходим к 1 // 10, условие > 0 не выполняется и мы получаем количество итераций,
# что и является длиной числа

print('СУММА ЦИФР В ЧИСЛЕ - WHILE')
# number = int(input('Enter a number: '))
# s = 0
# while number > 0:
#     s += number % 10 # здесь происходит суммирование откусываемых цифр
#     number = number // 10 # здесь происходит замещение предыдущего значения получаемым значением после откусывания
# print(s)

print('ЦИФРЫ МЕЖДУ ЧИСЛАМИ - WHILE')
# a = int(input('Enter first number '))
# b = int(input('Enter second number '))
# i = a + 1 # переменная счетчик, начал с 11 - ok
# while i < b: # 11 < 15 - да, идем дальше
#     print(i, end=' ') # печать первого символа - 11и
#     i += 1 # замещаем i на 12 и т.д.
# # получили цифры между 11 12 13 14 (вводили 10 и 15)

# print('ЦИФРЫ МЕЖДУ ЧИСЛАМИ - FOR')
# a = int(input('Enter first number '))
# b = int(input('Enter second number '))
# for i in range(a+1, b):
#     print(i, end=' ')
# получили цифры между 11 12 13 14 (вводили 10 и 15)

# print('СПИСКИ - FOR')
# l = ['z', 1, 1.1]
# for i in l:
#     print(i, end=' ') # получили z 1 1.1

print('СПИСКИ - FOR - ЗАМЕНА')

# l = [7, 8, 9, 11, 13]
# for i in range(len(l)):
#     i *= 2
#     print(l, end=' ')
# получили [7, 8, 9, 11, 13] [7, 8, 9, 11, 13] [7, 8, 9, 11, 13] [7, 8, 9, 11, 13] [7, 8, 9, 11, 13] - это ерунда, но смысл:
# так как print на ветви, то печатаем столько раз сколько итераций,
# что печатаем: умножая каждый раз последовательность от 0 до 4 на 2, мы получаем значение, но никуда его не ставим
# это значение приходит как новый i, но не используется, так как i определено в интервале от 0 до 4 - len(l).

# l = [3, 4, 5, 6, 7]
# for i in range(len(l)): # последовательность здесь от 0 до 4, 5 не включается и далее ...
#     l[i] **= l[i] # первый член [0]=3 * себя 3 и так далее, получаем в степени значения данного числа.
# print(l, end=' ')
# Получили [1, 4, 9, 16, 25], если в квадрате l[i] *= l[i]
# Получили [1, 4, 27, 256, 3125], если в каждый член в степень значения данного члена: 1**1, 2**2, 3**3... l[i] **= l[i]
# если поставить print на уровень ветви, то будет менять по одному члену, выводя полностью список:
# [1, 2, 3, 4, 5] [1, 4, 3, 4, 5] [1, 4, 9, 4, 5] [1, 4, 9, 16, 5] [1, 4, 9, 16, 25]

# for перебирает весь список или строку, но если range, то он начального (если нет то 0) до указанного значений, его не включая.

# l = [3, 4, 5, 6, 7]
# for i in l:
#     i *= i
# print(l)
# здесь также квадрат не используется, for перебирает значения списка не меняя значения в списке
# если не хотим менять список то втыкаем список, если хоти изменить список, то втыкаем range и он генерит индексы

for i in range(1970, 2025):
    if i % 4 == 0 and i % 100 != 0 or i % 400 == 0:
        print(i, end=' ')


